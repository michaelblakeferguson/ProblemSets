//Euler13 ~ Large sum
import java.util.concurrent.TimeUnit;
import java.math.BigInteger;

public class Euler13
{
    public static void main(String[] args) throws InterruptedException
	{
		long startTime = System.nanoTime();
		
		BigInteger n1;
		BigInteger n2;
		BigInteger n3;
		BigInteger n4;
		BigInteger n5;
		BigInteger n6;
		BigInteger n7;
		BigInteger n8;
		BigInteger n9;
		BigInteger n10;
		BigInteger n11;
		BigInteger n12;
		BigInteger n13;
		BigInteger n14;
		BigInteger n15;
		BigInteger n16;
		BigInteger n17;
		BigInteger n18;
		BigInteger n19;
		BigInteger n20;
		BigInteger n21;
		BigInteger n22;
		BigInteger n23;
		BigInteger n24;
		BigInteger n25;
		BigInteger n26;
		BigInteger n27;
		BigInteger n28;
		BigInteger n29;
		BigInteger n30;
		BigInteger n31;
		BigInteger n32;
		BigInteger n33;
		BigInteger n34;
		BigInteger n35;
		BigInteger n36;
		BigInteger n37;
		BigInteger n38;
		BigInteger n39;
		BigInteger n40;
		BigInteger n41;
		BigInteger n42;
		BigInteger n43;
		BigInteger n44;
		BigInteger n45;
		BigInteger n46;
		BigInteger n47;
		BigInteger n48;
		BigInteger n49;
		BigInteger n50;
		BigInteger n51;
		BigInteger n52;
		BigInteger n53;
		BigInteger n54;
		BigInteger n55;
		BigInteger n56;
		BigInteger n57;
		BigInteger n58;
		BigInteger n59;
		BigInteger n60;
		BigInteger n61;
		BigInteger n62;
		BigInteger n63;
		BigInteger n64;
		BigInteger n65;
		BigInteger n66;
		BigInteger n67;
		BigInteger n68;
		BigInteger n69;
		BigInteger n70;
		BigInteger n71;
		BigInteger n72;
		BigInteger n73;
		BigInteger n74;
		BigInteger n75;
		BigInteger n76;
		BigInteger n77;
		BigInteger n78;
		BigInteger n79;
		BigInteger n80;
		BigInteger n81;
		BigInteger n82;
		BigInteger n83;
		BigInteger n84;
		BigInteger n85;
		BigInteger n86;
		BigInteger n87;
		BigInteger n88;
		BigInteger n89;
		BigInteger n90;
		BigInteger n91;
		BigInteger n92;
		BigInteger n93;
		BigInteger n94;
		BigInteger n95;
		BigInteger n96;
		BigInteger n97;
		BigInteger n98;
		BigInteger n99;
		BigInteger n100;
		BigInteger sum;
		
		n1 =  new BigInteger("37107287533902102798797998220837590246510135740250");
		n2  = new BigInteger("46376937677490009712648124896970078050417018260538");
		n3  = new BigInteger("74324986199524741059474233309513058123726617309629");
		n4  = new BigInteger("91942213363574161572522430563301811072406154908250");
		n5  = new BigInteger("23067588207539346171171980310421047513778063246676");
		n6  = new BigInteger("89261670696623633820136378418383684178734361726757");
		n7  = new BigInteger("28112879812849979408065481931592621691275889832738");
		n8  = new BigInteger("44274228917432520321923589422876796487670272189318");
		n9  = new BigInteger("47451445736001306439091167216856844588711603153276");
		n10 = new BigInteger("70386486105843025439939619828917593665686757934951");
		n11 = new BigInteger("62176457141856560629502157223196586755079324193331");
		n12 = new BigInteger("64906352462741904929101432445813822663347944758178");
		n13 = new BigInteger("92575867718337217661963751590579239728245598838407");
		n14 = new BigInteger("58203565325359399008402633568948830189458628227828");
		n15 = new BigInteger("80181199384826282014278194139940567587151170094390");
		n16 = new BigInteger("35398664372827112653829987240784473053190104293586");
		n17 = new BigInteger("86515506006295864861532075273371959191420517255829");
		n18 = new BigInteger("71693888707715466499115593487603532921714970056938");
		n19 = new BigInteger("54370070576826684624621495650076471787294438377604");
		n20 = new BigInteger("53282654108756828443191190634694037855217779295145");
		n21 = new BigInteger("36123272525000296071075082563815656710885258350721");
		n22 = new BigInteger("45876576172410976447339110607218265236877223636045");
		n23 = new BigInteger("17423706905851860660448207621209813287860733969412");
		n24 = new BigInteger("81142660418086830619328460811191061556940512689692");
		n25 = new BigInteger("51934325451728388641918047049293215058642563049483");
		n26 = new BigInteger("62467221648435076201727918039944693004732956340691");
		n27 = new BigInteger("15732444386908125794514089057706229429197107928209");
		n28 = new BigInteger("55037687525678773091862540744969844508330393682126");
		n29 = new BigInteger("18336384825330154686196124348767681297534375946515");
		n30 = new BigInteger("80386287592878490201521685554828717201219257766954");
		n31 = new BigInteger("78182833757993103614740356856449095527097864797581");
		n32 = new BigInteger("16726320100436897842553539920931837441497806860984");
		n33 = new BigInteger("48403098129077791799088218795327364475675590848030");
		n34 = new BigInteger("87086987551392711854517078544161852424320693150332");
		n35 = new BigInteger("59959406895756536782107074926966537676326235447210");
		n36 = new BigInteger("69793950679652694742597709739166693763042633987085");
		n37 = new BigInteger("41052684708299085211399427365734116182760315001271");
		n38 = new BigInteger("65378607361501080857009149939512557028198746004375");
		n39 = new BigInteger("35829035317434717326932123578154982629742552737307");
		n40 = new BigInteger("94953759765105305946966067683156574377167401875275");
		n41 = new BigInteger("88902802571733229619176668713819931811048770190271");
		n42 = new BigInteger("25267680276078003013678680992525463401061632866526");
		n43 = new BigInteger("36270218540497705585629946580636237993140746255962");
		n44 = new BigInteger("24074486908231174977792365466257246923322810917141");
		n45 = new BigInteger("91430288197103288597806669760892938638285025333403");
		n46 = new BigInteger("34413065578016127815921815005561868836468420090470");
		n47 = new BigInteger("23053081172816430487623791969842487255036638784583");
		n48 = new BigInteger("11487696932154902810424020138335124462181441773470");
		n49 = new BigInteger("63783299490636259666498587618221225225512486764533");
		n50 = new BigInteger("67720186971698544312419572409913959008952310058822");
		n51 = new BigInteger("95548255300263520781532296796249481641953868218774");
		n52 = new BigInteger("76085327132285723110424803456124867697064507995236");
		n53 = new BigInteger("37774242535411291684276865538926205024910326572967");
		n54 = new BigInteger("23701913275725675285653248258265463092207058596522");
		n55 = new BigInteger("29798860272258331913126375147341994889534765745501");
		n56 = new BigInteger("18495701454879288984856827726077713721403798879715");
		n57 = new BigInteger("38298203783031473527721580348144513491373226651381");
		n58 = new BigInteger("34829543829199918180278916522431027392251122869539");
		n59 = new BigInteger("40957953066405232632538044100059654939159879593635");
		n60 = new BigInteger("29746152185502371307642255121183693803580388584903");
		n61 = new BigInteger("41698116222072977186158236678424689157993532961922");
		n62 = new BigInteger("62467957194401269043877107275048102390895523597457");
		n63 = new BigInteger("23189706772547915061505504953922979530901129967519");
		n64 = new BigInteger("86188088225875314529584099251203829009407770775672");
		n65 = new BigInteger("11306739708304724483816533873502340845647058077308");
		n66 = new BigInteger("82959174767140363198008187129011875491310547126581");
		n67 = new BigInteger("97623331044818386269515456334926366572897563400500");
		n68 = new BigInteger("42846280183517070527831839425882145521227251250327");
		n69 = new BigInteger("55121603546981200581762165212827652751691296897789");
		n70 = new BigInteger("32238195734329339946437501907836945765883352399886");
		n71 = new BigInteger("75506164965184775180738168837861091527357929701337");
		n72 = new BigInteger("62177842752192623401942399639168044983993173312731");
		n73 = new BigInteger("32924185707147349566916674687634660915035914677504");
		n74 = new BigInteger("99518671430235219628894890102423325116913619626622");
		n75 = new BigInteger("73267460800591547471830798392868535206946944540724");
		n76 = new BigInteger("76841822524674417161514036427982273348055556214818");
		n77 = new BigInteger("97142617910342598647204516893989422179826088076852");
		n78 = new BigInteger("87783646182799346313767754307809363333018982642090");
		n79 = new BigInteger("10848802521674670883215120185883543223812876952786");
		n80 = new BigInteger("71329612474782464538636993009049310363619763878039");
		n81 = new BigInteger("62184073572399794223406235393808339651327408011116");
		n82 = new BigInteger("66627891981488087797941876876144230030984490851411");
		n83 = new BigInteger("60661826293682836764744779239180335110989069790714");
		n84 = new BigInteger("85786944089552990653640447425576083659976645795096");
		n85 = new BigInteger("66024396409905389607120198219976047599490197230297");
		n86 = new BigInteger("64913982680032973156037120041377903785566085089252");
		n87 = new BigInteger("16730939319872750275468906903707539413042652315011");
		n88 = new BigInteger("94809377245048795150954100921645863754710598436791");
		n89 = new BigInteger("78639167021187492431995700641917969777599028300699");
		n90 = new BigInteger("15368713711936614952811305876380278410754449733078");
		n91 = new BigInteger("40789923115535562561142322423255033685442488917353");
		n92 = new BigInteger("44889911501440648020369068063960672322193204149535");
		n93 = new BigInteger("41503128880339536053299340368006977710650566631954");
		n94 = new BigInteger("81234880673210146739058568557934581403627822703280");
		n95 = new BigInteger("82616570773948327592232845941706525094512325230608");
		n96 = new BigInteger("22918802058777319719839450180888072429661980811197");
		n97 = new BigInteger("77158542502016545090413245809786882778948721859617");
		n98 = new BigInteger("72107838435069186155435662884062257473692284509516");
		n99 = new BigInteger("20849603980134001723930671666823555245252804609722");
		n100 = new BigInteger("53503534226472524250874054075591789781264330331690");
		sum = BigInteger.ZERO;
		
		sum = sum.add(n1);
		sum = sum.add(n2);
		sum = sum.add(n3);
		sum = sum.add(n4);
		sum = sum.add(n5);
		sum = sum.add(n6);
		sum = sum.add(n7);
		sum = sum.add(n8);
		sum = sum.add(n9);
		sum = sum.add(n10);
		sum = sum.add(n11);
		sum = sum.add(n12);
		sum = sum.add(n13);
		sum = sum.add(n14);
		sum = sum.add(n15);
		sum = sum.add(n16);
		sum = sum.add(n17);
		sum = sum.add(n18);
		sum = sum.add(n19);
		sum = sum.add(n20);
		sum = sum.add(n21);
		sum = sum.add(n22);
		sum = sum.add(n23);
		sum = sum.add(n24);
		sum = sum.add(n25);
		sum = sum.add(n26);
		sum = sum.add(n27);
		sum = sum.add(n28);
		sum = sum.add(n29);
		sum = sum.add(n30);
		sum = sum.add(n31);
		sum = sum.add(n32);
		sum = sum.add(n33);
		sum = sum.add(n34);
		sum = sum.add(n35);
		sum = sum.add(n36);
		sum = sum.add(n37);
		sum = sum.add(n38);
		sum = sum.add(n39);
		sum = sum.add(n40);
		sum = sum.add(n41);
		sum = sum.add(n42);
		sum = sum.add(n43);
		sum = sum.add(n44);
		sum = sum.add(n45);
		sum = sum.add(n46);
		sum = sum.add(n47);
		sum = sum.add(n48);
		sum = sum.add(n49);
		sum = sum.add(n50);
		sum = sum.add(n51);
		sum = sum.add(n52);
		sum = sum.add(n53);
		sum = sum.add(n54);
		sum = sum.add(n55);
		sum = sum.add(n56);
		sum = sum.add(n57);
		sum = sum.add(n58);
		sum = sum.add(n59);
		sum = sum.add(n60);
		sum = sum.add(n61);
		sum = sum.add(n62);
		sum = sum.add(n63);
		sum = sum.add(n64);
		sum = sum.add(n65);
		sum = sum.add(n66);
		sum = sum.add(n67);
		sum = sum.add(n68);
		sum = sum.add(n69);
		sum = sum.add(n70);
		sum = sum.add(n71);
		sum = sum.add(n72);
		sum = sum.add(n73);
		sum = sum.add(n74);
		sum = sum.add(n75);
		sum = sum.add(n76);
		sum = sum.add(n77);
		sum = sum.add(n78);
		sum = sum.add(n79);
		sum = sum.add(n80);
		sum = sum.add(n81);
		sum = sum.add(n82);
		sum = sum.add(n83);
		sum = sum.add(n84);
		sum = sum.add(n85);
		sum = sum.add(n86);
		sum = sum.add(n87);
		sum = sum.add(n88);
		sum = sum.add(n89);
		sum = sum.add(n90);
		sum = sum.add(n91);
		sum = sum.add(n92);
		sum = sum.add(n93);
		sum = sum.add(n94);
		sum = sum.add(n95);
		sum = sum.add(n96);
		sum = sum.add(n97);
		sum = sum.add(n98);
		sum = sum.add(n99);
		sum = sum.add(n100);
		
		long endTime = System.nanoTime();
		long timeElapsed = endTime - startTime;
		System.out.println("Solution: " + sum + "\n");
		System.out.println("Program completed in " + timeElapsed/1000000000 + " seconds.");
    }
}